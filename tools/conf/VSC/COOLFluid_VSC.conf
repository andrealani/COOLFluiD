#==================================================================
# Configuration opions for the prepare.pl script
#==================================================================
# This file should be in the directory from where the script is run
#==================================================================
# This file is meant as an example and it should be copied
# and renamed to coolfluid.conf, and adapted to the
# characteristics of the envrionment where you plan to
# configure and run COOLFluiD
#
# If you used the install-coolfluid.pl script, just replace
#    $HOME for your home account directory
#    $ARCH for the result of command "uname -m"
#==================================================================

#==================================================================
# default build options
#==================================================================

coolfluid_dir    = $COOLFLUID_TOP_DIR
basebuild_dir    = $COOLFLUID_BASEBUILD_DIR
install_dir      = $COOLFLUID_INSTALL_DIR

# compilers
cc               = mpicc
cxx              = mpicxx
fc               = mpif90

nofortran        = 1
withcurl         = 0

# library locations
mpi_dir          = $EBROOTOPENMPI
#curl_dir         = $EBROOTCURL
boost_dir        = $EBROOTBOOST
petsc_dir        = $EBROOTPETSC
parmetis_dir     = $EBROOTPARMETIS

with_longint     = 0

#assertions      = 0
mods-getall      = 1

# enable doxygen
#withdocs        = 1

# extra libraries to link with
gsl_includedir   = $EBROOTGSL/include/gsl
gsl_librarydir   = $EBROOTGSL/lib
metis_dir        = $EBROOTMETIS
blas_dir         = $EBROOTOPENBLAS
lapack_dir       = $EBROOTSCALAPACK
lapack_libraries = ""
cblas_dir        = ""

plato_dir        = ""
plato_librarydir = ""
plato_includedir = ""
trilinos_dir     = ""

####################
# kernel libraries #
####################

allactive                     = 0

# mimimum set of libs to be able to compile CF
lib_Common                    = on
lib_MathTools                 = on
lib_logcpp                    = on
lib_Config                    = on
lib_Environment               = on
lib_Framework                 = on
lib_ShapeFunctions            = on
lib_AnalyticalModel           = on

####################
# plugin libraries #
####################
# input formats
lib_CFmeshFileReader          = on
lib_THOR2CFmesh               = on
lib_Gambit2CFmesh             = on
lib_Tecplot2CFmesh            = on
lib_Gmsh2CFmesh               = on

# time steppers
lib_BackwardEuler             = on
lib_ForwardEuler              = on
lib_NewtonMethod              = on

# linear system solvers
lib_PetscI                    = on

# physical models (PDE)
lib_NavierStokes              = on
lib_Maxwell                   = on
lib_MHD                       = on
lib_MultiFluidMHD             = on
lib_Poisson                   = on

# output formats
lib_CFmeshFileWriter          = on
lib_TecplotWriter             = on
lib_ParaViewWriter            = on

# Finite Volume solvers
lib_FiniteVolume              = on
lib_FiniteVolumeNavierStokes  = on
lib_FiniteVolumeMaxwell       = on
lib_FiniteVolumeMHD           = on
lib_FiniteVolumeMultiFluidMHD = on
lib_FiniteVolumePoisson       = on
lib_NewtonMethodMHD           = on

# mesh tools
lib_CFmeshExtruder            = on
lib_CFmeshCellSplitter        = on
#
#cmake_generator               = kdev
#
with_testcases                = 1
#assertions                   = 0

# this allows to compile with BOOST >= 1.76
optim_cxxflags   = -O3 -g -fPIC -std=c++11
optim_cflags     = -O3 -g -fPIC
optim_fflags     = -O3 -g -fPIC
